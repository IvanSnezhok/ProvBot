from loader import dp, db

from aiogram.dispatcher.filters.builtin import Text
from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from middlewares import _, __
from keyboards.default.buttons import lang_change


@dp.message_handler(Text(equals=__("Ð—Ð¼Ñ–Ð½Ð¸Ñ‚Ð¸ Ð¼Ð¾Ð²Ñƒ")))
async def change_lang(message: types.Message):
    await message.answer(text=_("ÐžÐ±ÐµÑ€Ñ–Ñ‚ÑŒ Ð¼Ð¾Ð²Ñƒ"), reply_markup=lang_change)


@dp.message_handler(Text(equals="ðŸ‡ºðŸ‡¦ UA"))
@dp.message_handler(Text(equals="ðŸ‡ºðŸ‡¸ EN"))
@dp.message_handler(Text(equals="ðŸ‡·ðŸ‡º RU"))
async def changed_lang(message: types.Message):
    await db.set_lang(message.text[3:].lower(), message.from_user.id)
    if message.text[3:] == "UA":
        return_button = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
            [
                KeyboardButton(text="Ð“Ð¾Ð»Ð¾Ð²Ð½Ðµ Ð¼ÐµÐ½ÑŽ")
            ]
        ], one_time_keyboard=True)
    elif message.text[3:] == "EN":
        return_button = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
            [
                KeyboardButton(text="Main menu")
            ]
        ], one_time_keyboard=True)
    else:
        return_button = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
            [
                KeyboardButton(text="Ð“Ð»Ð°Ð²Ð½Ð¾Ðµ Ð¼ÐµÐ½ÑŽ")
            ]
        ], one_time_keyboard=True)

    await message.answer(
        text=_("Ð’Ð¸ Ð¾Ð±Ñ€Ð°Ð»Ð¸ {}\n Ð¢ÐµÐ¿ÐµÑ€ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð¿ÐµÑ€ÐµÐ¹Ñ‚Ð¸ Ñƒ Ð³Ð¾Ð»Ð¾Ð²Ð½Ðµ Ð¼ÐµÐ½ÑŽ",
               locale=message.text[3:].lower()).format(message.text[3:]),
        reply_markup=return_button)
